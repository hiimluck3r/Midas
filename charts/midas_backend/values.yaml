# Default values for midas-backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/hiimluck3r/midas-backend
  pullPolicy: Always #change to IfNotPresent in production
  # Overrides the image tag whose default is latest.
  tag: "" #latest is default

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

services:
  api:
    type: ClusterIP
    port: 4000
  db:
    type: ClusterIP
    port: 3000

httproute:
  enabled: false
  host: api.example.com
  annotations: {}
    # konghq.com/strip-path: '{{ strip_path }}'
  spec:
    parentRefs: kong # Active Gateway instance

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

mongodb-sharded:
  enabled: true
  service:
    ports:
      mongodb: 27017

  image:
    registry: docker.io
    repository: bitnami/mongodb-sharded
    tag: 7.0.6-debian-12-r0
    digest: ""
    pullPolicy: IfNotPresent
  
  auth:
    rootUser: root
    rootPassword: root #changeme
    existingSecret: ""
  shards: 2
  
  common:
    initScriptsCM: "initdb"
    initdb: true
  
  mongos:
    replicaCount: 1
    useStatefulSet: false
    servicePerReplica:
      enabled: false