name: backend-action
run-name: Check backend PR basic stability
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: ["main"]

jobs:
  build_test:
    if: github.head_ref == 'frontend' || github.head_ref == 'backend'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
    - name: Enter backend directory
      run: cd backend
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install
      run: npm i
    - name: build
      run: npm run build
  
  ctr_build:
    needs: ["build_test"]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        username: ["test"]
        password: ["test"]
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}

    - name: Enter mongo directory
      run: cd mongo
    - name: Build the mongodb Docker image
      run: docker build . --tag midas_mongo:test
    - name: Run mongodb
      run: docker run -d -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME={{ matrix.username }} -e MONGO_INITDB_ROOT_PASSWORD={{ matrix.password }} midas_mongo:test

    - name: Enter backend directory
      run: cd backend
    - name: Build the Docker image
      run: docker build . --tag midas_backend:test
    - name: Test the Docker image
      run: |
        docker run -d -p 4000:4000 -e URI="mongodb://{{ matrix.username }}:{{ matrix.password }}@localhost:27017" midas_backend:test
        sleep 3
    - name: Get HTTP response from "localhost:4000"
      run: "curl -f localhost:4000"
    
  telegram_notify:
    needs: ["ctr_build"]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        message: ["Pending Midas repository pull request from ${{ github.event.pull_request.user.login }}"]
    steps:
      - name: Notify owner in Telegram
        run: 'curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_ID }} -d text="${{ matrix.message }}" > /dev/null'